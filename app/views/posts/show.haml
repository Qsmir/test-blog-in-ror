.post--full-size
  %h2
    = post.title
    %small
      = post.friendly_date
  = link_to "edit", edit_post_path(post), class: 'post__button--edit'
  = link_to 'Delete', post, :method => :delete, :confirm => "Are you sure?",class: 'post__button--edit'

  .post__body
    = post.body
  .post__tags-list.tagsinput
    - post.tags_array.each do |tag|
      = content_tag :span, tag, class: 'tag'


%ol(style="clear:both;padding-top:15px;")
  - post.comments.each do |comment|
    %li.post--short-size
      - if current_user.id == comment.user_id or !comment.abusive
        = comment.user_name
        = "|"
        = comment.created_at.try(:strftime, "%d/%m/%Y: %H:%M")
        = "[votes sum : "
        = comment.votes.all.to_a.inject(0){|sum,item| sum + item.value}
        = " ]"
        .post__body= comment.body
        - if current_user.votes.where(:comment_id => comment.id).to_a.length == 0
          = render :partial => "form_vote_up", :locals => { :comment => comment }
          = render :partial => "form_vote_down", :locals => { :comment => comment }
        - if current_user.id == comment.user_id and comment.abusive
          = simple_form_for comment, :url => mark_as_not_abusive_path(comment) do |f|
            = f.button :submit,'mark as not abusive',:class => 'post__button--edit'
      - else
        = "This comment was recognized as offensive"    
%div
  = simple_form_for [post,post.comments.build] do |f|
    = f.input :body
    = f.input :post_id, as: :hidden, input_html: {value: post.id}
    = f.input :user_id, as: :hidden, input_html: {value: current_user.id}
    = f.button :submit
